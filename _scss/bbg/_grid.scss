// Custom bbg grid stuff to set how/when columns will split.
// Ideally this would be setup like this:
// https://medium.com/@pstonier/using-bourbon-neat-for-css-grid-structure-with-semantic-markup-cd1b13d48dc1#.it31zyc4u
// But USWDS supersedes Neat's mixin for media (which would accept min, max and column count)

// CONVERT GRIDS (SMALL, MEDIUM, LARGE) FOR SCREEN SIZES
.container {@include grid-container;}
.full-grid {@include grid-column(12);}
.kr-five-twelfths {@include span-columns(12);}
.kr-seven-twelfths {@include span-columns(12);}

.bbg-grid--2-3-3 {@include span-columns(6); margin-right: $bbg-grid-gutter;}
.bbg-grid--2-3-3:nth-child(2n) {clear: right; margin-right: 0;}

@include media($medium-screen) {
	.full-grid {@include grid-column(12);}
	.half-grid {@include grid-column(6);}
	.kr-seven-twelfths {@include span-columns(7);}
	.kr-five-twelfths {@include span-columns(5);}

	.bbg-grid--1-2-2 {@include span-columns(6); margin-right: 0;}
	.bbg-grid--1-2-2:nth-child(2n+1) {clear: left; margin-right: $bbg-grid-gutter;}

	.bbg-grid--1-2-3 {@include span-columns(6); margin-right: 0;}
	.bbg-grid--1-2-3:nth-child(2n+1) {clear: left; margin-right: $bbg-grid-gutter;}

	.bbg-grid--1-3-3 {@include span-columns(4); margin-right: 2%; clear:none;}
	.bbg-grid--1-3-3:nth-child(2n) {margin-right: 2%;}
	.bbg-grid--1-3-3:nth-child(3n) {margin-right: 0; clear: right;}

	.bbg-grid--2-3-3 {@include span-columns(4); clear: none; margin-right: $bbg-grid-gutter;}
	.bbg-grid--2-3-3:nth-child(2n) {margin-right: $bbg-grid-gutter;}
	.bbg-grid--2-3-3:nth-child(3n) {clear: right; margin-right: 0;}
}

@include media($medium-large-screen) {
	.usa-grid {max-width: 1140px;}
	.bbg-grid--1-1-1-2 {@include span-columns(6); clear: none; margin-right: 0;}
	.bbg-grid--1-1-1-2:nth-child(2n+1) {clear: left; margin-right: $bbg-grid-gutter;}

	.bbg-grid--1-2-3 {@include span-columns(4);margin-right: 2%; clear:none;}
	.bbg-grid--1-2-3:nth-child(2n+1) {clear: none; margin-right: 2%;}
	.bbg-grid--1-2-3:nth-child(3n) {clear: none; margin-right: 0;}
	.bbg-grid--1-2-3:nth-child(3n+1) {clear: left;}
}